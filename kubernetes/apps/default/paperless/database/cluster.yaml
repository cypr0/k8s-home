---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cnpg-paperless
spec:
  description: Postgresql cluster for Paperless
  # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/postgresql
  imageName: ghcr.io/cloudnative-pg/postgresql:17.5
  instances: 1
  storage:
    size: 10Gi
    storageClass: longhorn-postgres
  postgresql:
    parameters:
      max_connections: "200"
      shared_buffers: 256MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  # Initial bootstrap for first install
  # bootstrap:
  #  initdb:
  #    database: paperlessdb
  #    owner: paperlessusr
  #    secret:
  #      name: paperless-db-secret
  primaryUpdateStrategy: unsupervised
  monitoring:
    enablePodMonitor: true
  # Bootstrap to recover from an existing backup
  # Note: previousCluster needs to be set to the name of the previous cluster when recovering from an existing cnpg cluster.
  bootstrap:
    recovery:
      source: &previousCluster paperless-postgres17-v1
  backup:
    retentionPolicy: 8d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: gzip
      wal:
        compression: zstd
        maxParallel: 2
      destinationPath: s3://k8s-postgres/paperless/
      endpointURL: ${SECRET_S3_URL}
      serverName: paperless-postgres17-v2
      s3Credentials:
        accessKeyId:
          name: paperless-db-secret
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: paperless-db-secret
          key: SECRET_ACCESS_KEY
 # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: *previousCluster
