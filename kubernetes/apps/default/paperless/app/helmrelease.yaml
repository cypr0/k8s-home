---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      main:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: "paperless-secret"
        containers:
          paperless-ngx:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.17.1@sha256:ab72a0ab42a792228cdbe83342b99a48acd49f7890ae54b1ae8e04401fba24ee
            env:
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_CONSUMPTION_DIR: /consume
              PAPERLESS_DATA_DIR: /library/data
              PAPERLESS_DISABLE_REGULAR_LOGIN: "true"
              PAPERLESS_EXPORT_DIR: /library/export
              PAPERLESS_LOGOUT_REDIRECT_URL: https://id.${SECRET_DOMAIN}/application/o/paperless-ngx/end-session/
              PAPERLESS_MEDIA_ROOT: /library/media
              PAPERLESS_OCR_LANGUAGE: deu+eng+spa
              PAPERLESS_PORT: &port 80
              PAPERLESS_REDIS: redis://:${DRAGONFLY_PASSWORD}@dragonfly.database.svc.cluster.local:6379
              PAPERLESS_SOCIALACCOUNT_PROVIDERS: >
                    {
                      "openid_connect": {
                        "APPS": [
                          {
                            "provider_id": "authentik",
                            "name": "Authentik",
                            "client_id": "${PAPERLESS_OPENID_CLIENT_ID}",
                            "secret": "${PAPERLESS_OPENID_CLIENT_SECRET}",
                            "settings": {
                              "server_url": "https://id.${SECRET_DOMAIN}/application/o/paperless-ngx/.well-known/openid-configuration"
                            }
                          }
                        ],
                        "OAUTH_PKCE_ENABLED": "True",
                        "SCOPE": ["openid", "profile", "email", "groups"]
                      }
                    }
              PAPERLESS_SOCIAL_ACCOUNT_SYNC_GROUPS: "true"
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg.default.svc.cluster.local:3030
              PAPERLESS_TIKA_ENDPOINT: http://paperless-tika.default.svc.cluster.local:9998
              PAPERLESS_TIME_ZONE: ${TIMEZONE}
              PAPERLESS_TRUSTED_PROXIES: 10.96.0.0/16,10.69.0.0/16,192.168.0.0/16
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
              USERMAP_UID: 3000
              USERMAP_GID: 3000
            envFrom:
              - secretRef:
                  name: paperless-secret
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
          gotenberg:
            image:
              repository: docker.io/gotenberg/gotenberg
              tag: 8.21.1
            command:
              - gotenberg
              - "--chromium-disable-javascript=true"
              - "--chromium-allow-list=file:///tmp/.*"
              - "--api-port=3030"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              runAsUser: 3000
              runAsGroup: 3000
              fsGroup: 3000
              runAsNonRoot: true
          tika:
            image:
              repository: apache/tika
              tag: 3.2.1.0-full
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              runAsUser: 3000
              runAsGroup: 3000
              fsGroup: 3000
              runAsNonRoot: true
          paperless-ai:
            image:
              repository: docker.io/clusterzx/paperless-ai
              tag: 3.0.7
            env:
              PAPERLESS_AI_INITIAL_SETUP: "no"
              PAPERLESS_API_URL: "http://paperless-paperless-ngx.default.svc.cluster.local/api"
              AI_PROVIDER: "custom"
              SCAN_INTERVAL: "*/60 * * * *"
              SYSTEM_PROMPT: |
                You are a personalized document analyzer. Your task is to analyze documents and extract relevant information.\n\nAnalyze the document content and extract the following information into a structured JSON object:\n\n1. title: Create a concise, meaningful title for the document\n2. correspondent: Identify the sender/institution but do not include addresses\n3. tags: Select up to 4 relevant thematic tags\n4. document_date: Extract the document date (format: YYYY-MM-DD)\n5. language: Determine the document language (e.g. "de" or "en")\n      \nImportant rules for the analysis:\n\nFor tags:\n- FIRST check the existing tags before suggesting new ones\n- Use only relevant categories\n- Maximum 4 tags per document, less if sufficient (at least 1)\n- Avoid generic or too specific tags\n- Use only the most important information for tag creation\n- The output language is the one used in the document! IMPORTANT!\n\nFor the title:\n- Short and concise, NO ADDRESSES\n- Contains the most important identification features\n- For invoices/orders, mention invoice/order number if available\n- The output language is the one used in the document! IMPORTANT!\n\nFor the correspondent:\n- Identify the sender or institution\n  When generating the correspondent, always create the shortest possible form of the company name (e.g. "Amazon" instead of "Amazon EU SARL, German branch")\n\nFor the document date:\n- Extract the date of the document\n- Use the format YYYY-MM-DD\n- If multiple dates are present, use the most relevant one\n\nFor the language:\n- Determine the document language\n- Use language codes like "de" for German or "en" for English\n- If the language is not clear, use "und" as a placeholder. IMPORTANT!\n\nFor the document type: Use only the predefined document types from the whitelist (Bescheid, Dokument, Gehaltsabrechnung, Kontoauszug, Korrespondenz, Lohnsteuerbescheinigung, Nebenkostenabrechnung, Rechnung, Spendennachweis, Vertrag, Zeugnis, Zertifikat). Do not create or add new types. If none of the allowed types is clearly applicable, use the fallback type "Dokument".
              PROCESS_PREDEFINED_DOCUMENTS: "yes"
              TAGS: "Neu"
              ADD_AI_PROCESSED_TAG: "yes"
              AI_PROCESSED_TAG_NAME: "KI"
              USE_PROMPT_TAGS: "no"
              PROMPT_TAGS: ""
              USE_EXISTING_DATA: "yes"
              ACTIVATE_CUSTOM_FIELDS: "no"
              CUSTOM_API_URL: "https://openrouter.ai/api/v1"
              CUSTOM_MODEL: "anthropic/claude-3-haiku"
            envFrom:
              - secretRef:
                  name: paperless-secret
            resources:
              requests:
                cpu: 500m
                memory: 512Mi
              limits:
                cpu: 700m
                memory: 2Gi
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
    service:
      paperless-ngx:
        controller: main
        ports:
          http:
            port: *port
      paperless-ai:
        controller: main
        ports:
          http:
            port: 3000
      gotenberg:
        controller: main
        ports:
          http:
            port: 3030
      tika:
        controller: main
        ports:
          http:
            port: 9998
    route:
      paperless-ngx:
        hostnames:
          - paperless.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: paperless-paperless-ngx
                port: 80
      paperless-ai:
        hostnames:
          - paperless-ai.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: paperless-paperless-ai
                port: 3000
    persistence:
      library:
        enabled: true
        existingClaim: paperless-data-pvc
        advancedMounts:
          main:
            paperless-ngx:
              - path: /library
      consume:
        enabled: true
        existingClaim: paperless-consume-pvc
        advancedMounts:
          main:
            paperless-ngx:
              - path: /consume
      gotenberg-tmp:
        enabled: true
        type: emptyDir
        advancedMounts:
          main:
            gotenberg:
              - path: /tmp
      tika-tmp:
        enabled: true
        type: emptyDir
        advancedMounts:
          main:
            tika:
              - path: /tmp
      ai-config:
        enabled: true
        existingClaim: paperless-ai-pvc
        advancedMounts:
          main:
            paperless-ai:
              - path: /app/data
      ai-tmp:
        enabled: true
        type: emptyDir
        advancedMounts:
          main:
            paperless-ai:
              - path: /tmp
      ai-logs:
        enabled: true
        type: emptyDir
        advancedMounts:
          main:
            paperless-ai:
              - path: /app/logs
