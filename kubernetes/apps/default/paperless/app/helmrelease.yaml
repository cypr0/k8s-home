---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      main:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          paperless-ngx:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.17.1@sha256:ab72a0ab42a792228cdbe83342b99a48acd49f7890ae54b1ae8e04401fba24ee
            env:
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_CONSUMPTION_DIR: /consume
              PAPERLESS_DATA_DIR: /library/data
              PAPERLESS_EXPORT_DIR: /library/export
              PAPERLESS_LOGOUT_REDIRECT_URL: https://id.${SECRET_DOMAIN}/application/o/paperless-ngx/end-session/
              PAPERLESS_MEDIA_ROOT: /library/media
              PAPERLESS_OCR_LANGUAGE: deu+eng+spa
              PAPERLESS_PORT: &port 80
              PAPERLESS_REDIS: redis://:${PAPERLESS_REDIS_PASSWORD}@dragonfly.database.svc.cluster.local:6379
              PAPERLESS_SOCIALACCOUNT_PROVIDERS: >
                    {
                      "openid_connect": {
                        "APPS": [
                          {
                            "provider_id": "authentik",
                            "name": "Authentik",
                            "client_id": "${PAPERLESS_OPENID_CLIENT_ID}",
                            "secret": "${PAPERLESS_OPENID_CLIENT_SECRET}",
                            "settings": {
                              "server_url": "https://id.${SECRET_DOMAIN}/application/o/paperless-ngx/.well-known/openid-configuration"
                            }
                          }
                        ],
                        "OAUTH_PKCE_ENABLED": "True"
                      }
                    }
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg.default.svc.cluster.local:3000
              PAPERLESS_TIKA_ENDPOINT: http://paperless-tika.default.svc.cluster.local:9998
              PAPERLESS_TIME_ZONE: ${TIMEZONE}
              PAPERLESS_TRUSTED_PROXIES: 10.96.0.0/16,10.69.0.0/16,192.168.0.0/16
              PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
              USERMAP_UID: 3000
              USERMAP_GID: 3000
            envFrom:
              - secretRef:
                  name: paperless-secret
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
          gotenberg:
            image:
              repository: docker.io/gotenberg/gotenberg
              tag: 8.21.1
            command:
              - gotenberg
              - "--chromium-disable-javascript=true"
              - "--chromium-allow-list=file:///tmp/.*"
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              runAsUser: 3000
              runAsGroup: 3000
              fsGroup: 3000
              runAsNonRoot: true
          tika:
            image:
              repository: apache/tika
              tag: 3.2.0.0-full
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              runAsUser: 3000
              runAsGroup: 3000
              fsGroup: 3000
              runAsNonRoot: true
    service:
      paperless-ngx:
        controller: main
        ports:
          http:
            port: *port
      gotenberg:
        controller: main
        ports:
          http:
            port: 3000
      tika:
        controller: main
        ports:
          http:
            port: 9998
    route:
      paperless-ngx:
        hostnames:
          - paperless.${SECRET_DOMAIN}
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
          - backendRefs:
              - identifier: paperless-ngx
                port: *port
    persistence:
      library:
        enabled: true
        existingClaim: paperless-data-pvc
        advancedMounts:
          main:
            paperless-ngx:
              - path: /library
      consume:
        enabled: true
        existingClaim: paperless-consume-pvc
        advancedMounts:
          main:
            paperless-ngx:
              - path: /consume
      gotenberg-tmp:
        enabled: true
        type: emptyDir
        advancedMounts:
          main:
            gotenberg:
              - path: /tmp
      tika-tmp:
        enabled: true
        type: emptyDir
        advancedMounts:
          main:
            tika:
              - path: /tmp
