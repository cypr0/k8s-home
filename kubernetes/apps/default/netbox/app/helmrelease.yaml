---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: netbox
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      netbox:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          - name: fix-perms
            image: busybox
            command: ["sh", "-c", "chown -R 3000:3000 /opt/unit/state"]
        containers:
          app:
            image:
              repository: netboxcommunity/netbox
              tag: v4.4@sha256:f8687d9ccca82224c6967c5c2383692dab7a76a4b75d98043de982dc09acb72e
            env:
              TIME_ZONE: ${TIMEZONE}
              CORS_ORIGIN_ALLOW_ALL: true
              DB_WAIT_DEBUG: "1"
              HOUSEKEEPING_INTERVAL: "86400"
              REMOTE_AUTH_ENABLED: true
              REMOTE_AUTH_BACKEND: social_core.backends.open_id_connect.OpenIdConnectAuth
              SOCIAL_AUTH_OIDC_OIDC_ENDPOINT: https://id.{SECRET_DOMAIN}/application/o/netbox/
              SOCIAL_AUTH_OIDC_KEY: ${NETBOX_OPENID_CLIENT_ID}
              SOCIAL_AUTH_OIDC_SECRET: ${NETBOX_OPENID_CLIENT_SECRET}
              SOCIAL_AUTH_OIDC_SCOPE: openid profile email roles
              LOGOUT_REDIRECT_URL: https://id.{SECRET_DOMAIN}/application/o/netbox/end-session/
              EMAIL_FROM: "Netbox <mail@{SECRET_DOMAIN}>"
              EMAIL_PORT: 25
              EMAIL_SERVER: ${SECRET_MAIL_SERVER}
              EMAIL_TIMEOUT: 30
              GRAPHQL_ENABLED: true
              MEDIA_ROOT: /opt/netbox/netbox/media
              METRICS_ENABLED: false
              REDIS_CACHE_DATABASE: 7
              REDIS_CACHE_HOST: dragonfly.database.svc.cluster.local
              REDIS_CACHE_PORT: "6379"
              REDIS_CACHE_PASSWORD: ${DRAGONFLY_PASSWORD}
              REDIS_DATABASE: 8
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_PORT: "6379"
              REDIS_PASSWORD: ${DRAGONFLY_PASSWORD}
              REDIS_URL: "redis://:${DRAGONFLY_PASSWORD}@dragonfly.database.svc.cluster.local:6379/8"
              REDIS_CACHE_URL: "redis://:${DRAGONFLY_PASSWORD}@dragonfly.database.svc.cluster.local:6379/7"
              RELEASE_CHECK_URL: https://api.github.com/repos/netbox-community/netbox/releases
              WEBHOOKS_ENABLED: true
              SKIP_SUPERUSER: false
            envFrom:
              - secretRef:
                  name: netbox-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/
                    port: &port 8080
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  httpGet:
                    path: /api/
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 30
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsUser: 3000
        runAsGroup: 3000
        fsGroup: 3000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: netbox
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["netbox.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: netbox
                port: *port
    persistence:
      data:
        existingClaim: netbox-pvc
        globalMounts:
          - path: /opt/netbox/netbox/media
      unit-state:
        type: emptyDir
        globalMounts:
          - path: /opt/unit/state
